Index: app/src/main/res/layout/activity_main.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.coordinatorlayout.widget.CoordinatorLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    tools:context=\".MainActivity\">\r\n\r\n    <com.google.android.material.appbar.AppBarLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:theme=\"@style/AppTheme.AppBarOverlay\">\r\n\r\n        <androidx.appcompat.widget.Toolbar\r\n            android:id=\"@+id/toolbar\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"?attr/actionBarSize\"\r\n            android:background=\"?attr/colorPrimary\"\r\n            app:popupTheme=\"@style/AppTheme.PopupOverlay\" />\r\n\r\n    </com.google.android.material.appbar.AppBarLayout>\r\n\r\n    <include\r\n        layout=\"@layout/content_main\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\" />\r\n\r\n    <Button\r\n        android:id=\"@+id/button2\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"169dp\"\r\n        android:onClick=\"FilterHappy_btnClick\"\r\n        android:text=\"@string/btn_Happy\" />\r\n\r\n</androidx.coordinatorlayout.widget.CoordinatorLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_main.xml	(revision bd4161c28a49f720b5fe8628599ac4b9bda93644)
+++ app/src/main/res/layout/activity_main.xml	(date 1609336297234)
@@ -26,9 +26,10 @@
         android:layout_height="match_parent" />
 
     <Button
-        android:id="@+id/button2"
-        android:layout_width="match_parent"
-        android:layout_height="169dp"
+        android:id="@+id/btn_filterHappy"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_gravity="bottom"
         android:onClick="FilterHappy_btnClick"
         android:text="@string/btn_Happy" />
 
Index: app/src/main/java/com/campomilan/moodwatch/MainActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.campomilan.moodwatch;\r\n\r\nimport android.content.Intent;\r\nimport android.graphics.Movie;\r\nimport android.os.AsyncTask;\r\nimport android.os.Bundle;\r\n\r\nimport com.google.android.material.floatingactionbutton.FloatingActionButton;\r\nimport com.google.android.material.snackbar.Snackbar;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.appcompat.widget.Toolbar;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport android.util.JsonReader;\r\nimport android.util.Log;\r\nimport android.view.View;\r\n\r\nimport android.view.Menu;\r\nimport android.view.MenuItem;\r\n\r\nimport org.json.JSONArray;\r\nimport org.json.JSONException;\r\nimport org.json.JSONObject;\r\nimport org.w3c.dom.Element;\r\n\r\nimport java.io.BufferedReader;\r\nimport java.io.File;\r\nimport java.io.FileInputStream;\r\nimport java.io.FileNotFoundException;\r\nimport java.io.IOException;\r\nimport java.io.InputStream;\r\nimport java.io.InputStreamReader;\r\nimport java.net.HttpURLConnection;\r\nimport java.net.URL;\r\nimport java.util.ArrayList;\r\nimport java.util.LinkedList;\r\nimport java.util.List;\r\n\r\npublic class MainActivity extends AppCompatActivity {\r\n\r\n    //This link is for testing purposes only!!!\r\n    private static String JSON_URL = \"https://api.themoviedb.org/3/movie/popular?api_key=250ae9a3b22b8c7bdcc469913a866ce8&language=en-US&page=1\";\r\n\r\n    List<APIModelMovie> mMovieList;\r\n    RecyclerView mRecyclerView;\r\n    private String outputString;\r\n    private static int[] genreID = {28, 12, 35, 18, 27, 10749, 53};\r\n\r\n\r\n\r\n    // TODO: button toevoegen voor next page. nu toont het enkel de eerste 20 films van de filter\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_main);\r\n        Toolbar toolbar = findViewById(R.id.toolbar);\r\n        setSupportActionBar(toolbar);\r\n\r\n        mMovieList = new ArrayList<>();\r\n        mRecyclerView = findViewById(R.id.recyclerView);\r\n\r\n        GetData getData = new GetData();\r\n        getData.execute();\r\n    }\r\n\r\n\r\n    //Algemene poging om data te filteren oafhankelijk van de knop waarop is gedrukt.\r\n    //lijst meegeven met de alle films in en ook een mood meegeven\r\n\r\n    public void filtermovies(List<APIModelMovie> mMovieList, Moods mood) {\r\n        List<APIModelMovie> NewmMovieList;\r\n        NewmMovieList = new ArrayList<>();\r\n        APIModelMovie model;\r\n        boolean isDouble = false;\r\n\r\n        for (APIModelMovie e: mMovieList)     // de lijst met films doorlopen\r\n        {\r\n            for (int i=0; i < e.genreID.size();i++) // het genre ID van de film doorlopen\r\n            {\r\n                for(int j=0; j < mood.MoodID.length;j++) //het genre ID van de Mood doorlopan\r\n                {\r\n                    isDouble = false;\r\n                    if (NewmMovieList.isEmpty() && e.getGenreID().get(i) == mood.MoodID[j])\r\n                    {\r\n                        model = new APIModelMovie();\r\n                        model.setGenreID(e.getGenreID());\r\n                        model.setId(e.getId());\r\n                        model.setImgURL(e.getImgURL());\r\n                        model.setTitle(e.getTitle());\r\n\r\n                        NewmMovieList.add(model);\r\n                        //Log.d(\"model\",String.valueOf(model.id));\r\n\r\n                    }\r\n                    else if (e.getGenreID().get(i) == mood.MoodID[j]) // het genre ID en de Mood ID vergelijken\r\n                    {\r\n                        for (int m =0; m < NewmMovieList.size(); m++ )\r\n                        {\r\n                            if(NewmMovieList.get(m).getId() == e.getId())\r\n                            {\r\n                                isDouble = true;\r\n                            }\r\n                        }\r\n\r\n                        if(isDouble == false)\r\n                        {\r\n                            model = new APIModelMovie();\r\n                            model.setGenreID(e.getGenreID());\r\n                            model.setId(e.getId());\r\n                            model.setImgURL(e.getImgURL());\r\n                            model.setTitle(e.getTitle());\r\n\r\n                            NewmMovieList.add(model);\r\n                        }\r\n                        //Log.d(\"model\",String.valueOf(model.id));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        for (int i =0; i <NewmMovieList.size(); i++)\r\n            {\r\n            Log.d(\"newlist\", String.valueOf(NewmMovieList.get(i).title));\r\n            }\r\n        PutDataIntoRecyclerView(NewmMovieList);\r\n        /*\r\n        De nieuwe lijst printen.\r\n        */\r\n    }\r\n\r\n    // filteren op Mood/genre\r\n    public void FilterHappy(List<APIModelMovie> mMovielist) {\r\n        String FILE_NAME = \"happy.txt\";\r\n        int[] x = GetMoodIDs(FILE_NAME);\r\n        Moods HAPPY = new Moods(\"HAPPY\",x);\r\n        filtermovies(mMovieList, HAPPY);\r\n    }\r\n\r\n    // file ophalen en daar uit de MoodID's halen\r\n\r\n    public int[] GetMoodIDs(String File)\r\n    {\r\n        LoadMoodList(File);\r\n        String[] StringHolder;\r\n        int[] intHolder;\r\n        String holder = this.outputString;\r\n        ArrayList<Integer> ArrayHolder= new ArrayList<>();\r\n        StringHolder = holder.split(\"\\\\n\");\r\n        Log.d(\"testholder\", holder);\r\n        for (int j= 0; j <StringHolder.length; j++)\r\n        {\r\n            if (StringHolder[j].equals(\"true\"))\r\n            {\r\n                ArrayHolder.add(this.genreID[j]);\r\n            }\r\n        }\r\n        intHolder = new int[ArrayHolder.size()];\r\n\r\n        for (int i = 0; i<ArrayHolder.size() ;i++)\r\n        {\r\n            intHolder[i] = ArrayHolder.get(i);\r\n        }\r\n        return intHolder;\r\n    }\r\n\r\n\r\n    //btn_click\r\n    public void FilterHappy_btnClick(View view) {\r\n        FilterHappy(mMovieList);\r\n        //om een of andere reden moet dees wat het zou eens allemaal mooi samen kunne\r\n    }\r\n\r\n    public class GetData extends AsyncTask<String, String, String>{\r\n\r\n        @Override\r\n        protected String doInBackground(String... strings) {\r\n            String current = \"\";\r\n\r\n            try {\r\n                URL url;\r\n                HttpURLConnection urlConnection = null;\r\n\r\n                try {\r\n                    url = new URL(JSON_URL);\r\n                    urlConnection = (HttpURLConnection) url.openConnection();\r\n\r\n                    InputStream is = urlConnection.getInputStream();\r\n                    InputStreamReader isr = new InputStreamReader(is);\r\n\r\n                    int data = isr.read();\r\n                    while (data != -1) {\r\n                        current += (char) data;\r\n                        data = isr.read();\r\n                    }\r\n                    return current;\r\n\r\n                } catch (IOException e) {\r\n                    e.printStackTrace();\r\n                } finally {\r\n                    if (urlConnection != null) {\r\n                        urlConnection.disconnect();\r\n                    }\r\n                }\r\n\r\n            } catch (Exception e) {\r\n                e.printStackTrace();\r\n            }\r\n\r\n            return current;\r\n        }\r\n\r\n        @Override\r\n        protected void onPostExecute(String s) {\r\n            try {\r\n                // parse the JSON Object from the datastream string\r\n                JSONObject jsonObject = new JSONObject(s);\r\n\r\n                JSONArray jsonArray = jsonObject.getJSONArray(\"results\");\r\n\r\n                for (int i = 0; i< jsonArray.length(); i++){\r\n\r\n                    JSONObject movie = jsonArray.getJSONObject(i);\r\n\r\n                    APIModelMovie model = new APIModelMovie();\r\n                    model.setId(movie.getString(\"id\"));\r\n                    model.setTitle(movie.getString(\"original_title\"));\r\n                    model.setImgURL(movie.getString(\"poster_path\"));\r\n\r\n                    model.setGenreIDFromJSON(movie.getJSONArray(\"genre_ids\"));\r\n\r\n                    mMovieList.add(model);\r\n                }\r\n\r\n            } catch (JSONException e) {\r\n                e.printStackTrace();\r\n            }\r\n\r\n            PutDataIntoRecyclerView(mMovieList);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    private void PutDataIntoRecyclerView(List<APIModelMovie> movieList){\r\n\r\n        MovieListAdapter adapterMovie = new MovieListAdapter(this, movieList);\r\n        mRecyclerView.setLayoutManager(new LinearLayoutManager(this));\r\n\r\n        mRecyclerView.setAdapter(adapterMovie);\r\n\r\n    }\r\n\r\n    @Override\r\n    public boolean onCreateOptionsMenu(Menu menu) {\r\n        // Inflate the menu; this adds items to the action bar if it is present.\r\n        getMenuInflater().inflate(R.menu.menu_main, menu);\r\n        return true;\r\n    }\r\n\r\n    @Override\r\n    public boolean onOptionsItemSelected(MenuItem item) {\r\n        //tijdelijke oplossing om naar andere activities te navigeren\r\n        switch (item.getItemId()) {\r\n            case R.id.action_moods:\r\n                Intent intent = new Intent(MainActivity.this, SelectionActivity.class);\r\n                startActivity(intent);\r\n                return true;\r\n            default:\r\n                // Do nothing\r\n\r\n        }\r\n\r\n        return super.onOptionsItemSelected(item);\r\n    }\r\n\r\n    public void LoadMoodList(String FILE_NAME) {\r\n        FileInputStream fis = null;\r\n\r\n        try {\r\n            fis = openFileInput(FILE_NAME);\r\n            InputStreamReader isr = new InputStreamReader(fis);\r\n            BufferedReader br = new BufferedReader(isr);\r\n            StringBuilder sb = new StringBuilder();\r\n            String text;\r\n\r\n            while ((text = br.readLine()) != null) {\r\n                sb.append(text).append(\"\\n\");\r\n            }\r\n\r\n            this.outputString = sb.toString();\r\n\r\n\r\n        } catch (FileNotFoundException e) {\r\n            e.printStackTrace();\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        } finally {\r\n            if(fis != null){\r\n                try {\r\n                    fis.close();\r\n                    Log.v(\"fileRead\", this.outputString);\r\n                } catch (IOException e) {\r\n                    e.printStackTrace();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/campomilan/moodwatch/MainActivity.java	(revision bd4161c28a49f720b5fe8628599ac4b9bda93644)
+++ app/src/main/java/com/campomilan/moodwatch/MainActivity.java	(date 1609182705375)
@@ -5,6 +5,8 @@
 import android.os.AsyncTask;
 import android.os.Bundle;
 
+import com.campomilan.moodwatch.APIModelMovie;
+import com.campomilan.moodwatch.R;
 import com.google.android.material.floatingactionbutton.FloatingActionButton;
 import com.google.android.material.snackbar.Snackbar;
 
